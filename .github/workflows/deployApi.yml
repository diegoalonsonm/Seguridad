name: Build and deploy seguridad api

env:
  AZURE_WEBAPP_NAME: apiSeguridad
  AZURE_WEBAPP_PACKAGE_PATH: './API'
  DOTNET_VERSION: '8.0'

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'BD/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: 'Production-Database'

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Generate dynamic NuGet.config with GitHub Packages credentials
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>
            <configuration>
              <packageSources>
                <add key="github" value="https://nuget.pkg.github.com/diegoalonsonm/index.json" />
                <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
              </packageSources>
              <packageSourceCredentials>
                <github>
                  <add key="Username" value="diegoalonsonm" />
                  <add key="ClearTextPassword" value="${{ secrets.PACKAGE_TOKEN }}" />
                </github>
              </packageSourceCredentials>
            </configuration>' > NuGet.config


      - name: Restore dependencies using NuGet.config
        run: dotnet restore Seguridad.sln --configfile NuGet.config

      - name: Build all projects (except BD)
        run: |
          dotnet build API/API.csproj --configuration Release --no-restore
          dotnet build Abstracciones/Abstracciones.csproj --configuration Release --no-restore
          dotnet build BC/BC.csproj --configuration Release --no-restore
          dotnet build BW/BW.csproj --configuration Release --no-restore
          dotnet build DA/DA.csproj --configuration Release --no-restore
          dotnet build Helpers/Helpers.csproj --configuration Release --no-restore

      - name: Run tests (optional)
        run: |
          dotnet test API/API.csproj --no-restore --verbosity normal --configuration Release || echo "No tests found or test execution failed"

      - name: Publish API project
        run: dotnet publish API/API.csproj -c Release -o ./publish --no-restore

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./publish

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
          respect-funcignore: true
